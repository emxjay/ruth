{"version":3,"sources":["js/main.js"],"names":["presets","$","on","timeHours","timeMinutes","timeSeconds","distance","parseFloat","val","isNaN","alert","pace","parseInt","hours","minutes","seconds","output","time","timeInSeconds","toFixed","paceHours","paceMinutes","paceSeconds","system","text","selectedPreset","preset","forEach","element","title","km","mi","document","ready","material_select","presetSelector","getElementById","option","createElement","add"],"mappings":"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","file":"main.181f3af2.map","sourceRoot":"..","sourcesContent":["const presets = [\n  {\n    'title': '5K',\n    'distance': {\n      'km': 5,\n      'mi': 3.10686\n    }\n  },\n  {\n    'title': '10K',\n    'distance': {\n      'km': 10,\n      'mi': 6.21371\n    }\n  },\n  {\n    'title': 'Â½ Marathon',\n    'distance': {\n      'km': 21.0975,\n      'mi': 13.10937873\n    }\n  },\n  {\n    'title': 'Marathon',\n    'distance': {\n      'km': 42.195,\n      'mi': 26.2187575\n    }\n  },\n  {\n    'title': '50K',\n    'distance': {\n      'km': 50,\n      'mi': 31.0686\n    }\n  }\n];\n\n$('#calculateTime').on('click', function() {\n  let timeHours = '';\n  let timeMinutes = '';\n  let timeSeconds = '';\n\n  const distance = parseFloat($('#distance').val());\n  if (isNaN(distance) || (distance < 0)) {\n    alert('Please fill the distance field properly.');\n    $('#time_hours').val(timeHours);\n    $('#time_minutes').val(timeMinutes);\n    $('#time_seconds').val(timeSeconds);\n    return;\n  }\n\n  const pace = {\n    'hours': parseInt($('#pace_hours').val()),\n    'minutes': parseInt($('#pace_minutes').val()),\n    'seconds': parseInt($('#pace_seconds').val())\n  };\n\n  if ((isNaN(pace.hours) || (pace.hours < 0))\n    ||(isNaN(pace.minutes) || (pace.minutes < 0) || (pace.minutes > 59))\n    ||(isNaN(pace.seconds) || (pace.seconds < 0) || (pace.seconds > 59))) {\n    alert(\"Please fill the pace's fields properly.\");\n    $('#time_hours').val(timeHours);\n    $('#time_minutes').val(timeMinutes);\n    $('#time_seconds').val(timeSeconds);\n    return;\n  }\n\n  const output = ((pace.hours * 3600) + (pace.minutes * 60) + pace.seconds) * parseFloat(distance);\n\n  timeHours = parseInt(output / 3600);\n  timeMinutes = parseInt((output - (timeHours * 3600)) / 60);\n  timeSeconds = parseInt(output - (timeHours * 3600) - (timeMinutes * 60));\n\n  $('#time_hours').val(timeHours);\n  $('#time_minutes').val(timeMinutes);\n  $('#time_seconds').val(timeSeconds);\n});\n\n$('#calculateDistance').on('click', function() {\n  let distance = '';\n\n  const time = {\n    'hours': parseInt($('#time_hours').val()),\n    'minutes': parseInt($('#time_minutes').val()),\n    'seconds': parseInt($('#time_seconds').val())\n  };\n\n  if ((isNaN(time.hours) || (time.hours < 0))\n    ||(isNaN(time.minutes) || (time.minutes < 0) || (time.minutes > 59))\n    ||(isNaN(time.seconds) || time.seconds < 0) || (time.seconds > 59)) {\n    alert(\"Please fill the time's fields properly.\");\n    $('#distance').val(distance);\n    return;\n  }\n\n  const pace = {\n    'hours': parseInt($('#pace_hours').val()),\n    'minutes': parseInt($('#pace_minutes').val()),\n    'seconds': parseInt($('#pace_seconds').val())\n  };\n\n  if ((isNaN(pace.hours) || (pace.hours < 0))\n    ||(isNaN(pace.minutes) || (pace.minutes < 0) || (pace.minutes > 59))\n    ||(isNaN(pace.seconds) || (pace.seconds < 0) || (pace.seconds > 59))) {\n    alert('Please fill the pace\\'s fields properly.');\n    $('#distance').val(distance);\n    return;\n  }\n\n  const timeInSeconds = ((time.hours * 3600) + (time.minutes * 60) + time.seconds);\n  const paceInSeconds = ((pace.hours * 3600) + (pace.minutes * 60) + pace.seconds);\n  const output = timeInSeconds / paceInSeconds;\n\n  $('#distance').val(output.toFixed(3));\n});\n\n$('#calculatePace').on('click', function() {\n  let paceHours = '';\n  let paceMinutes = '';\n  let paceSeconds = '';\n\n  const time = {\n    'hours': parseInt($('#time_hours').val()),\n    'minutes': parseInt($('#time_minutes').val()),\n    'seconds': parseInt($('#time_seconds').val())\n  };\n\n  if ((isNaN(time.hours) || (time.hours < 0))\n    ||(isNaN(time.minutes) || (time.minutes < 0) || (time.minutes > 59))\n    ||(isNaN(time.seconds) || time.seconds < 0) || (time.seconds > 59)) {\n    alert(\"Please fill the time's fields properly.\");\n    $('#pace_hours').val(paceHours);\n    $('#pace_minutes').val(paceMinutes);\n    $('#pace_seconds').val(paceSeconds);\n    return;\n  }\n\n  const distance = parseFloat($('#distance').val());\n  if (isNaN(distance) || (distance < 0)) {\n    alert('Please fill the distance field properly.');\n    $('#pace_hours').val(paceHours);\n    $('#pace_minutes').val(paceMinutes);\n    $('#pace_seconds').val(paceSeconds);\n    return;\n  }\n\n  const output = ((time.hours * 3600) + (time.minutes * 60) + time.seconds) / distance;\n\n  paceHours = parseInt(output / 3600);\n  paceMinutes = parseInt((output - (paceHours * 3600)) / 60);\n  paceSeconds = parseInt(output - (paceHours * 3600) - (paceMinutes * 60));\n\n  $('#pace_hours').val(paceHours);\n  $('#pace_minutes').val(paceMinutes);\n  $('#pace_seconds').val(paceSeconds);\n});\n\n$('#system').on('change', function() {\n  const system = $('#system option:selected').text();\n  if (system == 'Metric') {\n    $('#unit').text('/km');\n  } else {\n    $('#unit').text('/mi');\n  }\n\n  const selectedPreset = $('#preset option:selected').text();\n  if (selectedPreset != 'Pick an event') {\n    let preset = '';\n    presets.forEach(function(element) {\n      if (element.title == selectedPreset) {\n        preset = element;\n      }\n    });\n\n    let distance = '';\n    if (system == 'Metric') {\n      distance = preset.distance.km;\n    } else {\n      distance = preset.distance.mi;\n    }\n    $('#distance').val(distance);\n  }\n});\n\n$('#preset').on('change', function() {\n  const selectedPreset = $('#preset option:selected').text();\n  const system = $('#system option:selected').text();\n\n  let preset = '';\n  presets.forEach(function(element) {\n    if (element.title == selectedPreset) {\n      preset = element;\n    }\n  });\n\n  let distance = '';\n  if (system == 'Metric') {\n    distance = preset.distance.km;\n  } else {\n    distance = preset.distance.mi;\n  }\n  $('#distance').val(distance);\n});\n\n$(document).ready(function() {\n  $('select').material_select();\n\n  const presetSelector = document.getElementById('preset');\n\n  presets.forEach(function(preset) {\n    const option = document.createElement('option');\n    option.text = preset.title;\n    presetSelector.add(option, null);\n  });\n\n  $('select').material_select();\n});\n"]}